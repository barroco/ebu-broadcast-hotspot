package org.ebulabs.hotspot;

import java.net.URL;
import java.util.ArrayList;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import android.util.Log;

class CapabilitiesHandler extends DefaultHandler {
	
	ArrayList<Tech> techs;
	
	Tech currentTech;
	
	public CapabilitiesHandler() {
		super();
		this.techs = new ArrayList<Tech>();
	}
	
	@Override
	public void startDocument() throws SAXException {
		
	}
	
	@Override
	public void endDocument() throws SAXException {
		
	}
	
	@Override
	public void endElement(String namespaceURI, String localName, String qName) 
    throws SAXException {
		
	}
	
	@Override
	public void startElement(String namespaceURI, String localName, String qName, 
		    Attributes atts) throws SAXException {
		if (localName == "tech") {
			String techname = atts.getValue("", "name");
			if (techname == null) {
				Log.e("startElement", "tech name is null");
				return ;
			}
			
			this.currentTech = new Tech(techname);
			
		}
		else if (localName == "device") {
			String devname = atts.getValue("", "name");
			if (devname == null) {
				Log.e("startElement", "device name is null");
				return ;
			}
			
			this.currentDev = new Device(devname);
			
		}
	}
	
	@Override
	public void characters(char ch[], int start, int length) {}
}

public class XMLCapabilitiesParser {
	
	
	public XMLCapabilitiesParser(URL url) {
		SAXParserFactory spf = SAXParserFactory.newInstance();
		SAXParser sp = spf.newSAXParser();
		
		XMLReader xr  = sp.getXMLReader();
		
		
		
	}
}
