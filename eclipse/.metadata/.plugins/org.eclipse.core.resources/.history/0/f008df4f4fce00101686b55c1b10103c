package org.ebulabs.hotspot;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;

import javax.jmdns.*;
import javax.jmdns.impl.*;

import android.util.Log;

/** Finds the hotspot using Zeroconf */
public class DiscoverHotspot {
	public DiscoverHotspot() {
		
		Log.e(Utils.LOGTAG + ".DiscoverHotspot", "start");
		
		class HotspotListener implements ServiceListener
		{
			@Override
			public void serviceAdded(ServiceEvent event) {
				Log.i(Utils.LOGTAG + ".DiscoverHotspot", "serviceAdded");
			}
			
			@Override
			public void serviceRemoved(ServiceEvent event) {
				Log.i(Utils.LOGTAG + ".DiscoverHotspot", "serviceRemoved");
			}
			
			@Override
			public void serviceResolved(ServiceEvent event) {
				Log.i(Utils.LOGTAG + ".DiscoverHotspot", "serviceResolved");
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", event.getInfo().getDomain());
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", event.getInfo().getServer());
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", Integer.toString(event.getInfo().getPort()));
			}
		}

		JmDNSImpl jmdns;
		
		try {
			
			
			jmdns = new JmDNSImpl(InetAddress.getByName("0.0.0.0"), "AndroidHotspotReceiver");
			
			ServiceInfo info = jmdns.getServiceInfo("_bhcp._tcp.local.", "EBU Broadcast Hotspot", 5);
			
			if (info != null) {
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", info.getDomain());
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", info.getServer());
				Log.d(Utils.LOGTAG + ".DiscoverHotspot", Integer.toString(info.getPort()));
			} else {
				Log.e(Utils.LOGTAG + ".DiscoverHotspot", "No mDNS response");
			} 
				 
			
			//jmdns.addServiceListener("_bhcp._tcp.local.", new HotspotListener());
		} catch (Exception e) {
			Log.e(Utils.LOGTAG + ".DiscoverHotspot", "jmdns failed");
			e.printStackTrace();
		} 
		
	}

}



