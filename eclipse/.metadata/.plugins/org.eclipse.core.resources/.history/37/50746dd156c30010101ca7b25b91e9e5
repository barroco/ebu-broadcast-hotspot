package org.ebulabs.hotspot;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

public class ChooseTechActivity extends Activity {
	
	private void toast(String t) {
		Toast.makeText(getApplicationContext(), t, Toast.LENGTH_SHORT).show();
	}
	
    /** Called when the activity is first created. */
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.channelchoice);
        
        /* Get list of techs from daemon */
        
        URL url;
        String url_sz = getString(R.string.daemon_url) + "/capabilities";
		try {
			url = new URL(url_sz);
		} catch (MalformedURLException e) {
			toast("Malformed URL '" + url_sz + "'");
			return;
		}
		
		Log.d("onCreate choose tech", "URL defined");
		
		//ArrayAdapter<String> techListAdapter = new ArrayAdapter<String>(this, R.id.techList, )
		
		ListView techList = (ListView)findViewById(R.id.techList);

		
        URLConnection conn;
		try {
			
			conn = url.openConnection();
			
			Log.d("onCreate choose tech", "Connection opened");
		
	        if (conn.getContentType() != "text/xml")
	        	toast("Error: Content-Type is not text/xml !");
	        
	        XMLCapabilitiesParser p = new XMLCapabilitiesParser(conn.getInputStream());

	        Log.d("onCreate choose tech", "Parsed");
				        
			ArrayList<String> technames = new ArrayList<String>();
			
	        for (Tech t : p.techs) {
	    	   technames.add(t.name);
	        }
	        
	        Log.d("onCreate choose tech", "Created & filled technames");
	        
	        techList.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, technames));
        
		} catch (IOException e) {
			toast("IO Exception");
			e.printStackTrace();
			return;
		}
    }
}