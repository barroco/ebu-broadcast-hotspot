vlc v4l2:// --sout '#transcode{soverlay,ab=42,samplerate=44100,channels=1,acodec=mp4a,vcodec=h264,width=320,height=180,vfilter="canvas{width=320,height=180,aspect=16:9}",fps=25,vb=200,venc=x264{vbv-bufsize=500,partitions=all,level=12,no-cabac,subme=7,threads=4,ref=2,mixed-refs=1,bframes=0,min-keyint=1,keyint=50,trellis=2,direct=auto,qcomp=0.0,qpmax=51}}:gather:rtp{mp4a-latm,sdp=rtsp://0.0.0.0:5554/leffa.sdp}'

Fails on Android because description fails. Might be related to a bug in Android 2.2.

----------

vlc v4l2:// --sout '#transcode{soverlay,ab=42,samplerate=44100,channels=1,acodec=mp4a,vcodec=h264,width=320,height=180,vfilter="canvas{width=320,height=180,aspect=16:9}",fps=25,vb=200,venc=x264{vbv-bufsize=500,partitions=all,level=12,no-cabac,subme=7,threads=4,ref=2,mixed-refs=1,bframes=0,min-keyint=1,keyint=50,trellis=2,direct=auto,qcomp=0.0,qpmax=51}}:gather:std{access=http,mux=mp4,dst=0.0.0.0:8080/vid.mp4}'

Fails with "Failed to autodetect media content"

----------

vlc v4l2:// --sout='#transcode{vcodec=mp2v, acodec=mpga, width=320, height=180,vb=200,fps=25}:gather:std{access=http,mux=3gp,dst=0.0.0.0:8080/vid.3gp}'

same as above

----------

On my other machine (think, arch linux), this works:
cvlc -v dvb://frequency=578000000
":sout=#transcode{vcodec=h264,vb=600,fps=20,scale=0.25,acodec=mp4a,ab=48,channels=2,samplerate=44100}:udp{dst=239.10.10.1:5000}"
":sout-keep"

But I was unable to find out what container that was, even though I presume it
must have been mp4...

---------

# YES this works !!!!
vlc -v ~/Videos/documentariesandyou.mp4 --sout \
"#rtp{dst=139.10.10.1,port=6024-6025,sdp=rtsp://10.73.141.81:5004/vid.sdp}"

# use the following URI on the client:
#rtsp://10.73.141.81:5004/vid.sdp

---------

Remarks:
The documentation says that Android can only read MPEG TS starting with version 3.0.

VLC says it cannot do mp4 with streams (only files), but it depends on the machine too...


Conclusions:
Used mp4v and not x264 as encoder. In the SDP, this either gives mp4v-es or x264, and android
only supports the former !

Therefore : vcodec=mp4v !
